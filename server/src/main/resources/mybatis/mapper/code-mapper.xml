<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.abondar.experimental.wsboard.server.mapper.SecurityCodeMapper" >

    <cache type="org.mybatis.caches.ehcache.EhcacheCache">
        <property name="timeToIdleSeconds" value="500"/>
        <property name="timeToLiveSeconds" value="500"/>
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache>

    <resultMap id="securityCodeMap" type="org.abondar.experimental.wsboard.server.datamodel.SecurityCode">
        <id column="id" property="id"/>
        <result column="code" property="code"/>
        <result column="user_id" property="userId"/>
    </resultMap>

    <insert id="insertCode" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO security_code (code, user_id)
        VALUES (#{securityCode.code},
                #{securityCode.userId})
            ON CONFLICT (id) DO NOTHING;
    </insert>

    <select id="getCodeByUserId" resultMap="securityCodeMap">
        SELECT *
        FROM security_code
        WHERE user_id = #{id}
    </select>

    <select id="checkCodeExists" resultType="Integer">
        SELECT 1
        FROM security_code
        WHERE code = #{code}
        LIMIT 1
    </select>

    <delete id="deleteCode">
        DELETE
        FROM security_code
        WHERE id = #{id}
    </delete>

</mapper>
