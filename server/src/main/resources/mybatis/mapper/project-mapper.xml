<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.abondar.experimental.wsboard.server.mapper.ProjectMapper">
    <cache type="org.mybatis.caches.ehcache.EhcacheCache">
        <property name="timeToIdleSeconds" value="500"/>
        <property name="timeToLiveSeconds" value="500"/>
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache>

    <resultMap id="projectMap" type="org.abondar.experimental.wsboard.server.datamodel.Project">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="repository" property="repository"/>
        <result column="is_active" property="isActive"/>
        <result column="description" property="description"/>
    </resultMap>


    <insert id="insertProject" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO project (name, start_date, end_date, repository, is_active)
        VALUES (#{project.name},
                #{project.startDate},
                #{project.endDate},
                #{project.repository},
                #{project.isActive})
            ON CONFLICT (id) DO NOTHING;
    </insert>


    <update id="updateProject">
        UPDATE project
        SET name        = #{project.name},
            start_date  = #{project.startDate},
            end_date    = #{project.endDate},
            repository  = #{project.repository},
            description = #{project.description},
            is_active   = #{project.isActive}
        WHERE id = #{project.id}
    </update>

    <select id="getProjectById" resultMap="projectMap">
        SELECT *
        FROM project
        WHERE id = #{id}
    </select>


    <select id="getProjectByName" resultMap="projectMap">
        SELECT *
        FROM project
        WHERE name = #{name}
    </select>

    <select id="getUserProjects" resultMap="projectMap" useCache="true">
        SELECT *
        FROM project prj
                 JOIN contributor ctr ON ctr.project_id = prj.id
        WHERE ctr.user_id = #{userId}
    </select>

    <delete id="deleteProject">
        DELETE
        FROM project
        WHERE id = #{id}
    </delete>


</mapper>
